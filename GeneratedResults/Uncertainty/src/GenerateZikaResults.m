(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



If[$CommandLine[[2]]=="-wstp",ClusterRun=False,ClusterRun=True];


If[ClusterRun,SetDirectory["./"],SetDirectory[NotebookDirectory[]]];


Import["Zika vaccine model setup.m"]


calibratedTransmissionRates=Get["nonsexualTransmissionRates.dat"];


Clear@runBaseModel
runBaseModel[country_,betaHV_,betaMF_,parameterOverride_:{}]:=
Block[{basemodel=Get["basemodel"<>country<>".dat"],
startyr=0,endyr=10},
ComputeFinalTimeSeries[
Join[parameterOverride,BaseParameters[country,betaHV,betaMF]],
Flatten[{NoVaccScen}],
country,startcondsBase[country,startyr,({1,0,0}&),({1,0,0}&),(0&),(0&)],startyr,endyr]
]


Clear[immunefunction,immunefunctionrange]
immunefunction[priorR_,ageover_,vaccagelow_,vaccagehigh_,vaccrate_]:=(Which[
#<ageover&&!(vaccagelow<=#<=vaccagehigh),{1,0,0},
#<ageover&&(vaccagelow<=#<=vaccagehigh),{1-vaccrate,0,vaccrate},
#>=ageover&&!(vaccagelow<=#<=vaccagehigh),{(1-priorR),priorR,0},
#>=ageover&&(vaccagelow<=#<=vaccagehigh),{(1-priorR)*(1-vaccrate),priorR,(1-priorR)*vaccrate}]&)

immunefunctionrange[priorR_,ageover_,vaccagerange_,vaccrate_]:=(Which[
#<ageover&&!MemberQ[vaccagerange,#],{1,0,0},
#<ageover&&MemberQ[vaccagerange,#],{1-vaccrate,0,vaccrate},
#>=ageover&&!MemberQ[vaccagerange,#],{(1-priorR),priorR,0},
#>=ageover&&MemberQ[vaccagerange,#],{(1-priorR)*(1-vaccrate),priorR,(1-priorR)*vaccrate}]&)


Clear[FemaleImmuneFunction,MaleImmuneFunction]
FemaleImmuneFunction[femaleagerange_,priorR_,ageover_,vaccagelow_,vaccagehigh_,femalevacc_,vaccrate_]:=If[femaleagerange=={},
immunefunction[priorR,ageover,vaccagelow,vaccagehigh,If[femalevacc,vaccrate,0]],
immunefunctionrange[priorR,ageover,femaleagerange,vaccrate]]

MaleImmuneFunction[maleagerange_,priorR_,ageover_,vaccagelow_,vaccagehigh_,malevacc_,vaccrate_]:=If[maleagerange=={},
immunefunction[priorR,ageover,vaccagelow,vaccagehigh,If[malevacc,vaccrate,0]],
immunefunctionrange[priorR,ageover,maleagerange,vaccrate]]


Clear[femalecumlVacc,malecumlVacc]
femalecumlVacc[femaleagerange_,femalevacc_,vaccagelow_,vaccagehigh_,vaccrate_]:=If[femaleagerange=={},
(If[femalevacc&&(vaccagelow<=#<=vaccagehigh),vaccrate,0]&),
(If[MemberQ[femaleagerange,Floor[#]],vaccrate,0]&)]

malecumlVacc[maleagerange_,malevacc_,vaccagelow_,vaccagehigh_,vaccrate_]:=If[maleagerange=={},
(If[malevacc&&(vaccagelow<=#<=vaccagehigh),vaccrate,0]&),
(If[MemberQ[maleagerange,Floor[#]],vaccrate,0]&)]


Clear[quantifyImpact]
quantifyImpact[
model_,(*NDSolve object defined for the present country*)
country_,

betaHV_,(*Vector-borne transmission modifier*)
betaMF_,(*Sexual transmission rate*)

vaccPars_:{},(*Vaccination scenario parameters*)

parameterOverride_:{},(*Optional override of parameters*)

startyr_:0,endyr_:10,

priorR_:0,(*Pre-existing population immunity*)
ageover_:0,(*Age above which individuals have immune memory*)
lag_:0(*Time between vaccine availability and outbreak start*)
]:=
Block[{basemodel=model,forceStartI=(lag==0),epistart=(If[lag!=0&&#==lag,0.001,0]&)},

With[{vaccrate=(vaccrate/.vaccPars/.vaccrate->0),(*Coverage*)
vacceff=(vacceff/.vaccPars/.vacceff->0),(*Vaccine efficacy*)
vaccagelow=(vaccagelow/.vaccPars/.vaccagelow->15),(*Youngest age to vaccinate*)
vaccagehigh=(vaccagehigh/.vaccPars/.vaccagehigh->49),(*Oldest age to vaccinate*)
malevacc=(malevacc/.vaccPars/.malevacc->False),(*Whether to vaccinate males*)
femalevacc=(femalevacc/.vaccPars/.femalevacc->False),(*Whether to vaccinate females*)
maleagerange=(maleagerange/.vaccPars/.maleagerange->{}),
femaleagerange=(femaleagerange/.vaccPars/.femaleagerange->{}),
annualcovg=(annualcovg/.vaccPars/.annualcovg->True)},


ComputeFinalTimeSeries[Join[parameterOverride,{\[Eta]->vacceff},BaseParameters[country,betaHV,betaMF]],
Flatten[{
If[annualcovg,
AnnualVacc[vaccrate(*Coverage*),
malevacc(*Vaccinate men*),
femalevacc(*Vaccinate women*),
vaccagelow,vaccagelow,(1&)(*Vaccinate every year*)],Nothing],
NoVaccScen}
],
country,
startcondsBase[country,startyr,
FemaleImmuneFunction[femaleagerange,priorR,ageover,vaccagelow,vaccagehigh,femalevacc,vaccrate],
MaleImmuneFunction[maleagerange,priorR,ageover,vaccagelow,vaccagehigh,malevacc,vaccrate],
femalecumlVacc[femaleagerange,femalevacc,vaccagelow,vaccagehigh,vaccrate],
malecumlVacc[maleagerange,malevacc,vaccagelow,vaccagehigh,vaccrate]
],startyr,endyr]
]
]


betaBestFit=0.259;
seasonalityAmplitude=7/10;
seasonalityPhase=-3*Pi/10;

seasonalityFunction[country_]:=(MosqBirth->(365/7.8)*mosquitoPopulation[country]*(1-7/10*Sin[Pi/5-2*Pi*t]))



(*UNCERTAINTY ANALYSIS SECTION*)



priorDistribution=Get["priorDistribution.dat"];


Clear@runBasicComparison
runBasicComparison[country_,attackRate_,basemodel_,vrate_,veff_,mvacc_,vlow_,vhigh_,overridePars_:{},maleAgeRange_:{},femaleAgeRange_:{},endyr_:10,priorR_:0,ageover_:0,lag_:0]:=
With[{
betaHV=If[attackRate=="Best fit",(betaHV/.overridePars/.{betaHV->betaBestFit}),
calibratedTransmissionRates[country][attackRate]],betaMF=0.1
},
quantifyImpact[
basemodel,country,betaHV,betaMF,

(*Vaccination scenario parameters*)
{annualcovg->True,vaccrate->vrate,vacceff->veff,femalevacc->True,malevacc->mvacc,vaccagelow->vlow,vaccagehigh->vhigh,maleagerange->maleAgeRange,femaleagerange->femaleAgeRange},
Append[overridePars,seasonalityFunction[country]],
0,endyr,priorR,ageover,lag
]
]


Clear@returnUncertaintyAnalysis
returnUncertaintyAnalysis[override_:{},attRset_:{"Best fit"},countryID_:Position[CountryNames,"Puerto Rico"][[1,1]]]:=
With[{country=CountryNames[[If[ClusterRun,ToExpression[$CommandLine[[3]]],countryID]]]},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
Association[Table[attR->
Association[Table[If[mvacc,"VaccinateMenAndWomen","VaccinateWomen"]->
Association[Table[vrate->
With[{sol=runBasicComparison[country,attR,basemodel,vrate,0.75,mvacc,9,49,override,{},{},10,0,0,0]},
Association[{"PopulationVaccines"->pullAllVaccines[sol,AgeClasses,True],
"MaleVaccines"->pullMaleVaccines[sol,AgeClasses,True],
"FemaleVaccines"->pullFemaleVaccines[sol,AgeClasses,True],
"FemaleVaccinesAgeGroup"->Association[Table[ToString[agegroup]->pullFemaleVaccines[sol,agegroup,True],{agegroup,Join[{Range[9,14]},Partition[Range[15,49],5]]}]],
"AllPrenatalInfections"->pullPrenatalInfections[sol,country,AgeClasses,True],
"PrenatalInfectionsAgeGroup"->Association[Table[ToString[agegroup]->pullPrenatalInfections[sol,country,agegroup,True],{agegroup,Join[{Range[9,14]},Partition[Range[15,49],5]]}]],
"AllPregnancies"->pullPregnancies[sol,country,AgeClasses,True],
"PregnanciesAgeGroup"->Association[Table[ToString[agegroup]->pullPregnancies[sol,country,agegroup,True],{agegroup,Join[{Range[9,14]},Partition[Range[15,49],5]]}]]}]],
{vrate,Range[0,0.95,0.05]}]],
{mvacc,{False,True}}]],
{attR,attRset}]]]]


If[ClusterRun,
With[{MCMCi=ToExpression[$CommandLine[[2]]],country=CountryNames[[ToExpression[$CommandLine[[3]]]]]},
Put[returnUncertaintyAnalysis[priorDistribution[[MCMCi]],If[country=="Puerto Rico",{"Best fit"},{0.25}]],"uncertaintyScenarios_"<>country<>"_"<>ToString[MCMCi]<>".dat"]]
]
