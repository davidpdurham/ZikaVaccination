(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



If[$CommandLine[[2]]=="-wstp",ClusterRun=False,ClusterRun=True];


If[ClusterRun,SetDirectory["./"],SetDirectory[NotebookDirectory[]]];


Import["Zika vaccine model setup.m"]


calibratedTransmissionRates=Get["nonsexualTransmissionRates.dat"];


Clear@runBaseModel
runBaseModel[country_,betaHV_,betaMF_,parameterOverride_:{}]:=
Block[{basemodel=Get["basemodel"<>country<>".dat"],
startyr=0,endyr=10},
ComputeFinalTimeSeries[
Join[parameterOverride,BaseParameters[country,betaHV,betaMF]],
Flatten[{NoVaccScen}],
country,startcondsBase[country,startyr,({1,0,0}&),({1,0,0}&),(0&),(0&)],startyr,endyr]
]


Clear[immunefunction,immunefunctionrange]
immunefunction[priorR_,ageover_,vaccagelow_,vaccagehigh_,vaccrate_]:=(Which[
#<ageover&&!(vaccagelow<=#<=vaccagehigh),{1,0,0},
#<ageover&&(vaccagelow<=#<=vaccagehigh),{1-vaccrate,0,vaccrate},
#>=ageover&&!(vaccagelow<=#<=vaccagehigh),{(1-priorR),priorR,0},
#>=ageover&&(vaccagelow<=#<=vaccagehigh),{(1-priorR)*(1-vaccrate),priorR,(1-priorR)*vaccrate}]&)

immunefunctionrange[priorR_,ageover_,vaccagerange_,vaccrate_]:=(Which[
#<ageover&&!MemberQ[vaccagerange,#],{1,0,0},
#<ageover&&MemberQ[vaccagerange,#],{1-vaccrate,0,vaccrate},
#>=ageover&&!MemberQ[vaccagerange,#],{(1-priorR),priorR,0},
#>=ageover&&MemberQ[vaccagerange,#],{(1-priorR)*(1-vaccrate),priorR,(1-priorR)*vaccrate}]&)


Clear[FemaleImmuneFunction,MaleImmuneFunction]
FemaleImmuneFunction[femaleagerange_,priorR_,ageover_,vaccagelow_,vaccagehigh_,femalevacc_,vaccrate_]:=If[femaleagerange=={},
immunefunction[priorR,ageover,vaccagelow,vaccagehigh,If[femalevacc,vaccrate,0]],
immunefunctionrange[priorR,ageover,femaleagerange,vaccrate]]

MaleImmuneFunction[maleagerange_,priorR_,ageover_,vaccagelow_,vaccagehigh_,malevacc_,vaccrate_]:=If[maleagerange=={},
immunefunction[priorR,ageover,vaccagelow,vaccagehigh,If[malevacc,vaccrate,0]],
immunefunctionrange[priorR,ageover,maleagerange,vaccrate]]


Clear[femalecumlVacc,malecumlVacc]
femalecumlVacc[femaleagerange_,femalevacc_,vaccagelow_,vaccagehigh_,vaccrate_]:=If[femaleagerange=={},
(If[femalevacc&&(vaccagelow<=#<=vaccagehigh),vaccrate,0]&),
(If[MemberQ[femaleagerange,Floor[#]],vaccrate,0]&)]

malecumlVacc[maleagerange_,malevacc_,vaccagelow_,vaccagehigh_,vaccrate_]:=If[maleagerange=={},
(If[malevacc&&(vaccagelow<=#<=vaccagehigh),vaccrate,0]&),
(If[MemberQ[maleagerange,Floor[#]],vaccrate,0]&)]


Clear[quantifyImpact]
quantifyImpact[
model_,(*NDSolve object defined for the present country*)
country_,

betaHV_,(*Vector-borne transmission modifier*)
betaMF_,(*Sexual transmission rate*)

vaccPars_:{},(*Vaccination scenario parameters*)

parameterOverride_:{},(*Optional override of parameters*)

startyr_:0,endyr_:10,

priorR_:0,(*Pre-existing population immunity*)
ageover_:0,(*Age above which individuals have immune memory*)
lag_:0(*Time between vaccine availability and outbreak start*)
]:=
Block[{basemodel=model,forceStartI=(lag==0),epistart=(If[lag!=0&&#==lag,0.001,0]&)},

With[{vaccrate=(vaccrate/.vaccPars/.vaccrate->0),(*Coverage*)
vacceff=(vacceff/.vaccPars/.vacceff->0),(*Vaccine efficacy*)
vaccagelow=(vaccagelow/.vaccPars/.vaccagelow->15),(*Youngest age to vaccinate*)
vaccagehigh=(vaccagehigh/.vaccPars/.vaccagehigh->49),(*Oldest age to vaccinate*)
malevacc=(malevacc/.vaccPars/.malevacc->False),(*Whether to vaccinate males*)
femalevacc=(femalevacc/.vaccPars/.femalevacc->False),(*Whether to vaccinate females*)
maleagerange=(maleagerange/.vaccPars/.maleagerange->{}),
femaleagerange=(femaleagerange/.vaccPars/.femaleagerange->{}),
annualcovg=(annualcovg/.vaccPars/.annualcovg->True)},


ComputeFinalTimeSeries[Join[parameterOverride,{\[Eta]->vacceff},BaseParameters[country,betaHV,betaMF]],
Flatten[{
If[annualcovg,
AnnualVacc[vaccrate(*Coverage*),
malevacc(*Vaccinate men*),
femalevacc(*Vaccinate women*),
vaccagelow,vaccagelow,(1&)(*Vaccinate every year*)],Nothing],
NoVaccScen}
],
country,
startcondsBase[country,startyr,
FemaleImmuneFunction[femaleagerange,priorR,ageover,vaccagelow,vaccagehigh,femalevacc,vaccrate],
MaleImmuneFunction[maleagerange,priorR,ageover,vaccagelow,vaccagehigh,malevacc,vaccrate],
femalecumlVacc[femaleagerange,femalevacc,vaccagelow,vaccagehigh,vaccrate],
malecumlVacc[maleagerange,malevacc,vaccagelow,vaccagehigh,vaccrate]
],startyr,endyr]
]
]


betaBestFit=0.259;
seasonalityAmplitude=7/10;
seasonalityPhase=-3*Pi/10;

seasonalityFunction[country_]:=(MosqBirth->(365/7.8)*mosquitoPopulation[country]*(1-7/10*Sin[Pi/5-2*Pi*t]))



(* PRIOR COVERAGE SCENARIO *)



Clear@runFrontierScenarios
runFrontierScenarios[country_,attackRate_,basemodel_,vrate_,veff_,mvacc_,vlow_,vhigh_,maleAgeRange_:{},femaleAgeRange_:{},endyr_:10,priorR_:0,ageover_:0,lag_:0]:=
With[{
betaHV=If[attackRate=="Best fit",betaBestFit,calibratedTransmissionRates[country][attackRate]],betaMF=0.1
},
quantifyImpact[
basemodel,country,betaHV,betaMF,

(*Vaccination scenario parameters*)
{annualcovg->False,vaccrate->vrate,vacceff->veff,femalevacc->True,malevacc->mvacc,vaccagelow->vlow,vaccagehigh->vhigh,maleagerange->maleAgeRange,femaleagerange->femaleAgeRange},
{seasonalityFunction[country]},
0,endyr,priorR,ageover,lag
]
]


Clear@vaccResultsPriorImmunity
vaccResultsPriorImmunity[country_,priorR_]:=
With[{veff=0.75,mvacc=False,vlow=9,vhigh=49,endyr=5},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
Flatten[
Table[
Association[{"attR"->attR,"vrate"->vrate,"priorR"->priorR,
"Results"->
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,mvacc,vlow,vhigh,{},{},endyr,priorR]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
}],{attR,Range[0.05,0.55,0.05]},{vrate,{0,0.5,0.9}}],1]
]
];


With[{country=CountryNames[[ToExpression[$CommandLine[[2]]]]]},
Put[Flatten[Table[vaccResultsPriorImmunity[country,priorR],{priorR,Range[0,0.95,0.05]},1]],("results"<>"_"<>country<>".dat")]]



(* Age-specific scenarios for frontier *)



Clear@runFrontierScenarios
runFrontierScenarios[country_,attackRate_,basemodel_,vrate_,veff_,mvacc_,vlow_,vhigh_,maleAgeRange_:{},femaleAgeRange_:{},endyr_:10,priorR_:0,ageover_:0,lag_:0]:=
With[{
betaHV=If[attackRate=="Best fit",betaBestFit,
calibratedTransmissionRates[country][attackRate]],betaMF=0.1
},
quantifyImpact[
basemodel,country,betaHV,betaMF,

(*Vaccination scenario parameters*)
{annualcovg->False,vaccrate->vrate,vacceff->veff,femalevacc->True,malevacc->mvacc,vaccagelow->vlow,vaccagehigh->vhigh,maleagerange->maleAgeRange,femaleagerange->femaleAgeRange},

{seasonalityFunction[country]},
0,endyr,priorR,ageover,lag
]
]


Clear@noVaccineResult
noVaccineResult[country_,attR_,lag_:0]:=With[{vrate=0,veff=0},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
Association[{"LowAge"->0,"HighAge"->0,"MaleVaccination"->False,
"Results"->With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,False,100,100,{},{},If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
}]
]
];


Clear@vaccResultsFrontier
vaccResultsFrontier[country_,attR_,lag_:0]:=
With[{vrate=0.9,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
Flatten[
Table[
Association[{"LowAge"->vlow,"HighAge"->vhigh,"MaleVaccination"->mvacc,
"Results"->
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,mvacc,vlow,vhigh,{},{},If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
}],
{mvacc,{False,True}},
{vlow,Range[0,45,5]},
{vhigh,Range[vlow+4,49,5]}],2]
]
];


Clear@vaccResults5yr
vaccResults5yr[country_,attR_,lag_:0]:=
With[{vrate=0.01,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
Flatten[
Table[
Association[{"LowAge"->vlow,"HighAge"->vhigh,"MaleVaccination"->mvacc,
"Results"->
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,mvacc,vlow,vhigh,{},{},If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
}],
{mvacc,{False}},
{vlow,Range[10,45,5]},
{vhigh,{vlow+4}}],2]
]
];


Clear@indirectProtection
indirectProtection[country_,attR_,lag_:0]:=
With[{vrate=0.9,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,True,200,200,Range[0,99],Complement[Range[0,99],Range[15,49]],If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
]
];


Clear@indirectProtectionLow
indirectProtectionLow[country_,attR_,lag_:0]:=
With[{vrate=0.01,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,True,200,200,Range[0,99],Complement[Range[0,99],Range[15,49]],If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
]
];


Clear@targetMen
targetMen[country_,attR_,lag_:0]:=
With[{vrate=0.9,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,True,200,200,{15,49},{200,200},If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
]
];


Clear@targetMenLow
targetMenLow[country_,attR_,lag_:0]:=
With[{vrate=0.01,veff=0.75},
With[{basemodel=Get["basemodel"<>country<>".dat"]},
With[{data=runFrontierScenarios[country,attR,basemodel,vrate,veff,True,200,200,{15,49},{200,200},If[lag==0,10,15],0,0,lag]},
Association[{
"vaccines"->pullAllVaccines[data,AgeClasses,True],
"prenatalInfections"->pullPrenatalInfections[data,country,AgeClasses,True],
"pregnancies"->pullPregnancies[data,country,AgeClasses,True],
"population"->pullAllPopulation[data,AgeClasses,True]
}]
]
]
];


With[{
country=CountryNames[[ToExpression[$CommandLine[[2]]]]],
attR=ToExpression[$CommandLine[[3]]],
lag=ToExpression[$CommandLine[[4]]]},
(
Put[noVaccineResult[country,attR,lag],
"noVaccineResult"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];
Put[indirectProtection[country,attR,lag],
"indirectProtection"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];
Put[vaccResultsFrontier[country,attR,lag],
"resultsFrontier"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];
Put[targetMen[country,attR,lag],
"targetMen"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];

Put[vaccResults5yr[country,attR,lag],
"vaccResults5yr"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];
Put[indirectProtectionLow[country,attR,lag],
"indirectProtectionLow"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];
Put[targetMenLow[country,attR,lag],
"targetMenLow"<>"_"<>country<>"_attR_"<>ToString[attR]<>"_lag_"<>ToString[lag]<>".dat"];

)
];



(*UNCERTAINTY ANALYSIS SECTION*)




